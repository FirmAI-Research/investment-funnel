name: build_and_deploy

on:
  release:
    types: [created]
  workflow_dispatch:

env:
  PROJECT_ID: TODO
  IMAGE: TODO/investment-funnel-app

jobs:
  setup-build-publish:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.fetch-latest-release.outputs.latest-release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: fetch-latest-release
        run: |
          git fetch --tags
          export LATEST_RELEASE_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "::set-output name=latest-release::$(echo $LATEST_RELEASE_VERSION)"
          echo The latest release version is \"$LATEST_RELEASE_VERSION\".
        shell: bash

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@TODO
        with:
          service_account_key: ${{ secrets.TODO }}
          project_id: TODO

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |-
          gcloud --quiet auth configure-docker

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "$IMAGE:${{ steps.fetch-latest-release.outputs.latest-release }}" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "$IMAGE:${{ steps.fetch-latest-release.outputs.latest-release }}"

  deploy:
    needs: [setup-build-publish]
    runs-on: ubuntu-latest
    outputs:
      hostname: ${{ steps.deploy.outputs.hostname }}
    env:
      GKE_CLUSTER: TODO
      GKE_ZONE: TODO
      DEPLOYMENT_NAME: investment-funnel-app
      K8S_YAML_DIR: k8s
    steps:
      - uses: actions/checkout@v2
      # Get the GKE credentials so that we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@TODO
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.TODO }}

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          cd ${{ env.K8S_YAML_DIR }}
          curl --location https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.2.0/kustomize_v4.2.0_linux_amd64.tar.gz | tar xz
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          cd ${{ env.K8S_YAML_DIR }}
          ./kustomize edit set image investment-funnel-app=$IMAGE:${{needs.setup-build-publish.outputs.release_tag}}
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
          echo ::set-output name=hostname::$(kubectl get services $DEPLOYMENT_NAME |awk -F ' ' 'FNR == 2 {print $4}')
